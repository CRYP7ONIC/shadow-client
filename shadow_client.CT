<?xml version="1.0" encoding="utf-8"?>
<CheatTable CheatEngineTableVersion="29">
  <Forms>
    <Shadow Class="TCEForm" Encoding="Ascii85">*mBY(,e8=aKVr!rNnuJ$%EzGTDIK81]KVJe%,yxxv4/o!k),P{Yk6fYmUi9Mx]]:gj?-ELBRF#AH{EUCFay7!thACPJ96sKUgC;aE9rfneV%9E*yHd,*a@7j/+rt55bES}3-rl)[5hkJ@I106glJ%}%p^fRl2PVYY2[64nU)o2Rjd*)hqPr7;:sKsq*%K1okNJng(sOY7(,)%C/RaHY,@%M;A5/;13uEgh#]V:s^(2cYy;eYiN7giQCx=JD.lv0(F:5-OQi/E=4f1;szWB1sz-Y3Olww.@=J7.Zh4Q(vSHV3U/]{=oT!]rC,{Y!0SD%=@$UQ-8y(/9OD;qB6F=E?+-(77GX@$d6InK(Kc(EAc}2y/oOexEELvw@)#BjLz8rGi!d;7FYk/m%%c{M^n7Hx?auF_=m*5w/9Wa0zuT6:*Hgi;euZj)eP#yK+vB(kHH/I)fr8UABaqdL-#l-vrzHRAL:-RpOS}=Y(c9tqs4TfGo4@z%{K}J_JWV@B];lRnQkUyUTL$8bshCT?e3]Oy4sD5f824[[N[l.C9bO7Z@?a]!J:iS16c#*R8VcW{BT9WeJa6Pewg+jVs8K86d]gS(7rzu]StJlVSsW:{FwuGXqfuiYq^x.YP6_JPE5V;cgK436TiSyIy2cQRSCHODrv?vzLMn!]+0q%DQ!c0JX8A3eqA@r_],MiMcQDqDm*_-U=kC,X*V[uig;lxwC]uQ(@rrTotwjmXTJwC1y[eySKuCXzcZ$Eq5D4(I?mi?@DeFC^Z2=PAQ/Og@=)Bf[,[bt(mRtsV8SW1+@rBadNf?EI4iYxM?hirRtEkzctT{sSkIdW4YP7k}.ly7U#^V%iQt0^7=Gz%KM8C);DVUJvtg:67Ck-qI4rUZul7KQf=CxH5D6EXEuwE/i/.@Bk{4}PXYZ%227giH(I]I-H,fWuZIhx-ACzakDFC2},{lM!(.h_0RiR+cNnJekx(GTVt^z7k}8FQ.5eM?0P@6aEh0qgP;X(ts;PleIN1tsIgU)7AM:-neY-2q}pmDYKUw/N5*=gYU:ANc{;sS!AScxFgCt;x0Gd,F3qcyNNVD2ps*!%3_#VVBS7{dPGcM,l#Sxmrv89MC?]P!B3F^w,[)rv7haM/teck^n3)n,KxIE_9s+0-S9M3gp]?(H2o}aj}4Hflz,G*%ujT8v6PkNL$sHO^]uuB-^XCufhbgYm;l3usT.lVU?+BN%zMiR;Tx2E.DAk:QyK,MqdBI]0M26E$4f=OC.AX.GYit2n50tdXxdENm6@cIUm]Q#X@y!+RNZKsrj0O,dHDYPdAIqRFvST3r_zp,0v^%1IRI7%r0/YEyaK/R5F-Bj4+</Shadow>
  </Forms>
  <CheatEntries>
    <CheatEntry>
      <ID>2014</ID>
      <Description>"ClickGui"</Description>
      <Options moHideChildren="1"/>
      <LastState/>
      <Color>FF00FF</Color>
      <VariableType>Auto Assembler Script</VariableType>
      <AssemblerScript>[ENABLE]
LuaCall(UDF1.Visible = true)

[DISABLE]
LuaCall(UDF1.Visible = false)
</AssemblerScript>
    </CheatEntry>
    <CheatEntry>
      <ID>2021</ID>
      <Description>"Modules"</Description>
      <Options moActivateChildrenAsWell="1" moDeactivateChildrenAsWell="1" moAllowManualCollapseAndExpand="1"/>
      <LastState Value="" Activated="1" RealAddress="00000000"/>
      <GroupHeader>1</GroupHeader>
      <CheatEntries>
        <CheatEntry>
          <ID>2009</ID>
          <Description>"Combat"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>0000FF</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1521</ID>
              <Description>"Rapid Hit + Fastplace"</Description>
              <LastState/>
              <Color>8080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(Rapid,Minecraft.Windows.exe,41 80 38 00 74 ?? 85 D2 0F)
registersymbol(Rapid)

Rapid+3:
  db 01

[DISABLE]

Rapid+3:
  db 00

unregistersymbol(Rapid)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1522</ID>
              <Description>"Rapid Hit + Fastplace Bypass"</Description>
              <LastState/>
              <Color>8080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(BypassRapid,Minecraft.Windows.exe,41 80 38 00 74 ?? 85 D2 0F)
alloc(newmem,$1000,"Minecraft.Windows.exe"+B7FC10)
alloc(cps,4)
label(code)
label(return)

newmem:
  cmp [cps],10
  jb code
  cmp byte ptr [r8],01
  je Minecraft.Windows.exe+B7FC8C
  mov [cps],0
  jmp return

code:
  add [cps],1
  cmp byte ptr [r8],00
  je Minecraft.Windows.exe+B7FC8C
  jmp return

BypassRapid:
  jmp newmem
  nop
return:
registersymbol(BypassRapid)
registersymbol(cps)
[DISABLE]

BypassRapid:
  db 41 80 38 00 74 76

unregistersymbol(BypassRapid)
unregistersymbol(cps)
dealloc(cps)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2013</ID>
              <Description>"No Knockbacc"</Description>
              <LastState/>
              <Color>8080FF</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
}
[ENABLE]
aobscanmodule(NoKnockback,Minecraft.Windows.exe,48 FF A0 ?? ?? ?? ?? 8B 02 89 81 ?? ?? ?? ?? 8B 42 04 89 81 ?? ?? ?? ?? 8B 42 08 89 81 ?? ?? ?? ?? C3) // should be unique
alloc(originalNoKnock,24)
registersymbol(originalNoKnock)
registersymbol(NoKnockback)

///////////////////////////
originalNoKnock:
readmem(NoKnockback+9,24)
//////////////////////////

NoKnockback+9:
  db 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90 90

[DISABLE]

NoKnockback+9:
  readmem(originalNoKnock,24)

unregistersymbol(NoKnockback)
unregistersymbol(original)
dealloc(originalNoKnock)

{
// ORIGINAL CODE - INJECTION POINT: "Minecraft.Windows.exe"+C1E3FB

"Minecraft.Windows.exe"+C1E3D6: 48 8B 03                    -  mov rax,[rbx]
"Minecraft.Windows.exe"+C1E3D9: 48 8B D7                    -  mov rdx,rdi
"Minecraft.Windows.exe"+C1E3DC: 48 8B CB                    -  mov rcx,rbx
"Minecraft.Windows.exe"+C1E3DF: 48 8B 5C 24 30              -  mov rbx,[rsp+30]
"Minecraft.Windows.exe"+C1E3E4: 48 83 C4 20                 -  add rsp,20
"Minecraft.Windows.exe"+C1E3E8: 5F                          -  pop rdi
"Minecraft.Windows.exe"+C1E3E9: 48 FF A0 90 00 00 00        -  jmp qword ptr [rax+00000090]
"Minecraft.Windows.exe"+C1E3F0: 8B 02                       -  mov eax,[rdx]
"Minecraft.Windows.exe"+C1E3F2: 89 81 C4 00 00 00           -  mov [rcx+000000C4],eax
"Minecraft.Windows.exe"+C1E3F8: 8B 42 04                    -  mov eax,[rdx+04]
// ---------- INJECTING HERE ----------
"Minecraft.Windows.exe"+C1E3FB: 89 81 C8 00 00 00           -  mov [rcx+000000C8],eax
// ---------- DONE INJECTING  ----------
"Minecraft.Windows.exe"+C1E401: 8B 42 08                    -  mov eax,[rdx+08]
"Minecraft.Windows.exe"+C1E404: 89 81 CC 00 00 00           -  mov [rcx+000000CC],eax
"Minecraft.Windows.exe"+C1E40A: C3                          -  ret
"Minecraft.Windows.exe"+C1E40B: CC                          -  int 3
"Minecraft.Windows.exe"+C1E40C: CC                          -  int 3
"Minecraft.Windows.exe"+C1E40D: CC                          -  int 3
"Minecraft.Windows.exe"+C1E40E: CC                          -  int 3
"Minecraft.Windows.exe"+C1E40F: CC                          -  int 3
"Minecraft.Windows.exe"+C1E410: 40 53                       -  push rbx
"Minecraft.Windows.exe"+C1E412: 48 83 EC 50                 -  sub rsp,50
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2010</ID>
          <Description>"Movement"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>008000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>2007</ID>
              <Description>"Longjump / Bhop (sprint)"</Description>
              <LastState/>
              <Color>00C100</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(LongOst,Minecraft.Windows.exe,0F B7 C8 F3 0F 10 0C 8A)
alloc(Original1,8)
registersymbol(Original1)
alloc(Original2,8)
registersymbol(Original2)
registersymbol(LongOst)

///////////////////////////
Original1:
readmem(LongOst+08,8)
Original2:
readmem(LongOst+28,8)
//////////////////////////

LongOst+08:
  db 90 90 90 90 90 90 90 90

LongOst+28:
  db 90 90 90 90 90 90 90 90

[DISABLE]
LongOst+08:
  readmem(Original1,8)

LongOst+28:
  readmem(Original2,8)


unregistersymbol(LongOst)
unregistersymbol(Original1)
dealloc(Original1)
unregistersymbol(Original2)
dealloc(Original2)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1238</ID>
              <Description>"Vanilla Nofall"</Description>
              <LastState/>
              <Color>00C100</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
aobscanmodule(Nofall,Minecraft.Windows.exe,F3 0F 5C C6 F3 0F 11 83 ?? ?? 00 00 EB)
alloc(Nofalloriginal,8)
registersymbol(Nofalloriginal)
registersymbol(Nofall)

///////////////////////////
Nofalloriginal:
readmem(Nofall+4,8)
//////////////////////////

Nofall+4:
  db 90 90 90 90 90 90 90 90

[DISABLE]

Nofall+4:
  readmem(Nofalloriginal,8)

unregistersymbol(Nofall)
unregistersymbol(Nofalloriginal)
dealloc(Nofalloriginal)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>82</ID>
              <Description>"Liquid Highjump"</Description>
              <LastState/>
              <Color>00C100</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(WaterJump,Minecraft.Windows.exe,89 ?? ?? ?? 00 00 F3 0F 58 ?? ?? ?? 00 00 F3 0F 11 ?? ?? ?? 00 00 EB ??) // should be unique
alloc(newmem,$1000,"Minecraft.Windows.exe"+E0B38E)
alloc(WJumpOriginal,8)
alloc(WJumpHight,4)

label(code)
label(return)
///////////////////////////
WJumpHight:
  dd (float)0.63
WJumpOriginal:
readmem(WaterJump+E,8)
//////////////////////////
newmem:

code:
  movss xmm6,[WJumpHight]
  readmem(WaterJump+E,8)
  jmp return

WaterJump+E:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(WaterJump)
registersymbol(WJumpOriginal)
registersymbol(WJumpHight)
[DISABLE]

WaterJump+E:
    readmem(WJumpOriginal,8)

unregistersymbol(WaterJump)
unregistersymbol(WJumpOriginal)
unregistersymbol(WJumpHight)
dealloc(newmem)
dealloc(WJumpOriginal)
dealloc(WJumpHight)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2011</ID>
          <Description>"Visual"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>FF0000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>1292</ID>
              <Description>"Show Cordinates"</Description>
              <LastState/>
              <Color>FF8080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(ShowCords,Minecraft.Windows.exe,83 FA 0E 7E ?? 49 8D 80 ?? ?? 00 00) // should be unique
alloc(ShowCordsBytes,2)
registersymbol(ShowCords)
registersymbol(ShowCordsBytes)
////////////////////////////
ShowCordsBytes:
readmem(ShowCords+15,2)
////////////////////////////
ShowCords+15:
  db 90 90

[DISABLE]

ShowCords+15:
  readmem(ShowCordsBytes,2)

unregistersymbol(ShowCords)
unregistersymbol(ShowCordsBytes)
dealloc(ShowCordsBytes)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1666</ID>
              <Description>"No Fire animation (buggy)"</Description>
              <LastState/>
              <Color>FF8080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]
Aobscanmodule(NoFire,Minecraft.Windows.exe,48 8B C2 48 0F AB C8 49 85 C0 49 89 41 ?? 0F 95 C1 4C 85 C2 0F 95 C0 3A C8)
Alloc(removeFire,$1000,"Minecraft.Windows.exe"+D4645F)
Alloc(FireBytes,7)

Label(code)
Label(originalcode)
Label(return)

FireBytes:
 ReadMem(NoFire+A,7)

removeFire:
  cmp byte ptr [r9+10],9
  je code
  cmp byte ptr [r9+10],17
  je code
  cmp byte ptr [r9+10],1
  je code
  cmp byte ptr [r9+10],3
  je code
  jmp originalcode

originalcode:
  ReadMem(NoFire+A,7)
  jmp return

code:
  mov byte ptr [r9+10],0
  setne cl
  jmp return

NoFire+A:
  jmp removeFire
  nop
  nop
return:
Registersymbol(NoFire)
Registersymbol(FireBytes)
[DISABLE]

NoFire+A:
  readmem(FireBytes,7)

UnRegistersymbol(NoFire)
UnRegistersymbol(FireBytes)
DeAlloc(removeFire)
DeAlloc(FireBytes)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>70</ID>
              <Description>"No Hurtcam"</Description>
              <LastState/>
              <Color>FF8080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(NoHurtcam,Minecraft.Windows.exe,89 B9 ?? ?? 00 00 C7 81 ?? ?? 00 00 0A 00 00 00 C7 81 ?? ?? 00 00 0A 00 00 00)
alloc(HurtcamBytes,10)
registersymbol(NoHurtcam)
registersymbol(HurtcamBytes)
///////////////////////////
HurtcamBytes:
readmem(NoHurtcam+10,10)
///////////////////////////
NoHurtcam+10:
  db 90 90 90 90 90 90 90 90 90 90

[DISABLE]

NoHurtcam+10:
  readmem(HurtcamBytes,10)

unregistersymbol(HurtcamBytes)
unregistersymbol(NoHurtcam)
dealloc(HurtcamBytes)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>1648</ID>
              <Description>"Zoom Hack"</Description>
              <Options moRecursiveSetValue="1" moManualExpandCollapse="1" moAllowManualCollapseAndExpand="1"/>
              <LastState/>
              <Color>FF8080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(Zoom,Minecraft.Windows.exe,F3 0F 10 ?? ?? ?? 00 00 F3 0F 10 ?? ?? ?? 00 00 F3 0F 10 ?? ?? ?? 00 00 0F 2F) // should be unique
alloc(newmem,$1000,Zoom)
alloc(ZoomOriginal,8)
alloc(ZoomAddress,4)
alloc(zoomflag,1)
label(code)
label(return)

///////////////////////////
ZoomOriginal:
readmem(Zoom,8)
ZoomAddress:
  dq (float)1
//////////////////////////

newmem:
code:
  readmem(Zoom,8)
  cmp [zoomflag],1
  jb return
  movss xmm1,[ZoomAddress]
  sub [zoomflag],1
  jmp return

Zoom:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Zoom)
registersymbol(ZoomAddress)
registersymbol(ZoomOriginal)
registersymbol(Zoomflag)
[DISABLE]

Zoom:
  readmem(ZoomOriginal,8)

unregistersymbol(Zoom)
unregistersymbol(ZoomAddress)
unregistersymbol(ZoomOriginal)
unregistersymbol(Zoomflag)
dealloc(newmem)
dealloc(ZoomAddress)
dealloc(ZoomOriginal)
dealloc(zoomflag)
</AssemblerScript>
              <CheatEntries>
                <CheatEntry>
                  <ID>1649</ID>
                  <Description>"edit the hotkey"</Description>
                  <Color>FF8080</Color>
                  <VariableType>Byte</VariableType>
                  <Address>zoomflag</Address>
                  <Hotkeys>
                    <Hotkey>
                      <Action>Set Value</Action>
                      <Keys/>
                      <Description>set the value and hotkey</Description>
                      <ID>0</ID>
                    </Hotkey>
                  </Hotkeys>
                </CheatEntry>
              </CheatEntries>
            </CheatEntry>
            <CheatEntry>
              <ID>2020</ID>
              <Description>"FullBright"</Description>
              <LastState/>
              <Color>FF8080</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>{ Game   : Minecraft.Windows.exe
}
[ENABLE]

aobscanmodule(Gamma,Minecraft.Windows.exe,F3 0F 10 81 F0 00 00 00 C3 CC CC CC CC CC CC CC CC CC CC CC 48 8B 11)
alloc(newmem,$1000,"Minecraft.Windows.exe"+6652EC)
alloc(GammaBytes,8)
alloc(GammaAddress,4)
label(code)
label(return)
///////////////////////////
GammaBytes:
readmem(Gamma,8)
GammaAddress:
  dq (float)4
//////////////////////////
newmem:

code:
  readmem(Gamma,8)
  movss xmm0,[GammaAddress]
  jmp return

Gamma:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(GammaAddress)
registersymbol(Gamma)
registersymbol(GammaBytes)
[DISABLE]

Gamma:
  readmem(GammaBytes,8)

unregistersymbol(Gamma)
unregistersymbol(GammaBytes)
unregistersymbol(GammaBytes)
dealloc(newmem)
dealloc(GammaBytes)
dealloc(GammaAddress)

{
// ORIGINAL CODE - INJECTION POINT: "Minecraft.Windows.exe"+6652EC

"Minecraft.Windows.exe"+6652CB: 48 3B C2                 -  cmp rax,rdx
"Minecraft.Windows.exe"+6652CE: 74 06                    -  je Minecraft.Windows.exe+6652D6
"Minecraft.Windows.exe"+6652D0: 48 8B 48 28              -  mov rcx,[rax+28]
"Minecraft.Windows.exe"+6652D4: EB 02                    -  jmp Minecraft.Windows.exe+6652D8
"Minecraft.Windows.exe"+6652D6: 33 C9                    -  xor ecx,ecx
"Minecraft.Windows.exe"+6652D8: 48 8B 81 A0 00 00 00     -  mov rax,[rcx+000000A0]
"Minecraft.Windows.exe"+6652DF: 48 85 C0                 -  test rax,rax
"Minecraft.Windows.exe"+6652E2: 74 08                    -  je Minecraft.Windows.exe+6652EC
"Minecraft.Windows.exe"+6652E4: 48 8B C8                 -  mov rcx,rax
"Minecraft.Windows.exe"+6652E7: E9 24 0C 46 00           -  jmp Minecraft.Windows.exe+AC5F10
// ---------- INJECTING HERE ----------
"Minecraft.Windows.exe"+6652EC: F3 0F 10 81 F0 00 00 00  -  movss xmm0,[rcx+000000F0]
// ---------- DONE INJECTING  ----------
"Minecraft.Windows.exe"+6652F4: C3                       -  ret
"Minecraft.Windows.exe"+6652F5: CC                       -  int 3
"Minecraft.Windows.exe"+6652F6: CC                       -  int 3
"Minecraft.Windows.exe"+6652F7: CC                       -  int 3
"Minecraft.Windows.exe"+6652F8: CC                       -  int 3
"Minecraft.Windows.exe"+6652F9: CC                       -  int 3
"Minecraft.Windows.exe"+6652FA: CC                       -  int 3
"Minecraft.Windows.exe"+6652FB: CC                       -  int 3
"Minecraft.Windows.exe"+6652FC: CC                       -  int 3
"Minecraft.Windows.exe"+6652FD: CC                       -  int 3
}
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
        <CheatEntry>
          <ID>2012</ID>
          <Description>"Other"</Description>
          <Options moHideChildren="1"/>
          <LastState Value="" Activated="1" RealAddress="00000000"/>
          <Color>C08000</Color>
          <GroupHeader>1</GroupHeader>
          <CheatEntries>
            <CheatEntry>
              <ID>9</ID>
              <Description>"Hunger (Offline)"</Description>
              <LastState/>
              <Color>FFFF00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(Hunger,Minecraft.Windows.exe,F3 0F 10 80 84 00 00 00 F3 0F 11)
alloc(newmem,$1000,"Minecraft.Windows.exe"+C1FC14)

label(code)
label(return)

newmem:

code:
  mov [rax+00000084],(float)20
  movss xmm0,[rax+00000084]
  jmp return

Hunger:
  jmp newmem
  nop
  nop
  nop
return:
registersymbol(Hunger)

[DISABLE]

Hunger:
  db F3 0F 10 80 84 00 00 00

unregistersymbol(Hunger)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
            <CheatEntry>
              <ID>2006</ID>
              <Description>"Offline godmode"</Description>
              <LastState/>
              <Color>FFFF00</Color>
              <VariableType>Auto Assembler Script</VariableType>
              <AssemblerScript>[ENABLE]

aobscanmodule(Godmode,Minecraft.Windows.exe,F3 0F 11 44 83 7C)
alloc(newmem,$1000,"Minecraft.Windows.exe"+106A46C)

label(code)
label(return)

newmem:

code:
  jmp return

Godmode:
  jmp newmem
  nop
return:
registersymbol(Godmode)

[DISABLE]

Godmode:
  db F3 0F 11 44 83 7C

unregistersymbol(Godmode)
dealloc(newmem)
</AssemblerScript>
            </CheatEntry>
          </CheatEntries>
        </CheatEntry>
      </CheatEntries>
    </CheatEntry>
  </CheatEntries>
  <UserdefinedSymbols/>
  <Comments>bruh
</Comments>
  <LuaScript>--- ATTACH ---
function UDF1_CEButton1Click(sender)
openProcess('Minecraft.Windows.exe')
if getProcessIDFromProcessName('Minecraft.Windows.exe') ~= nil then
   showMessage("Attached, Happy Hacking!")
else
    showMessage("Not Attached, Open Minecraft")
    openProcess('Minecraft.Windows.exe')
end
end

--- CHEATS ---
function UDF1_CECheckbox1Change(sender)
if Shadow_CECheckbox1.Checked then
getAddressList().getMemoryRecordByDescription("Rapid Hit + Fastplace").Active = true
else
getAddressList().getMemoryRecordByDescription("Rapid Hit + Fastplace").Active = false
end
end

function Shadow_CECheckbox2Change(sender)
if Shadow_CECheckbox2.Checked then
getAddressList().getMemoryRecordByDescription("Rapid Hit + Fastplace Bypass").Active = true
else
getAddressList().getMemoryRecordByDescription("Rapid Hit + Fastplace Bypass").Active = false
end
end

function Shadow_CECheckbox3Change(sender)
if Shadow_CECheckbox3.Checked then
getAddressList().getMemoryRecordByDescription("No Knockbacc").Active = true
else
getAddressList().getMemoryRecordByDescription("No Knockbacc").Active = false
end
end
function UDF1_CECheckbox4Change(sender)
if Shadow_CECheckbox4.Checked then
getAddressList().getMemoryRecordByDescription("Longjump / Bhop (sprint)").Active = true
else
getAddressList().getMemoryRecordByDescription("Longjump / Bhop (sprint)").Active = false
end
end

function UDF1_CECheckbox5Change(sender)
if Shadow_CECheckbox5.Checked then
getAddressList().getMemoryRecordByDescription("Vanilla Nofall").Active = true
else
getAddressList().getMemoryRecordByDescription("Vanilla Nofall").Active = false
end
end

function UDF1_CECheckbox6Change(sender)
if Shadow_CECheckbox6.Checked then
getAddressList().getMemoryRecordByDescription("Liquid Highjump").Active = true
else
getAddressList().getMemoryRecordByDescription("Liquid Highjump").Active = false
end
end

function UDF1_CECheckbox7Change(sender)
if Shadow_CECheckbox7.Checked then
getAddressList().getMemoryRecordByDescription("Show Cordinates").Active = true
else
getAddressList().getMemoryRecordByDescription("Show Cordinates").Active = false
end
end

function UDF1_CECheckbox8Change(sender)
if Shadow_CECheckbox8.Checked then
getAddressList().getMemoryRecordByDescription("No Fire animation (buggy)").Active = true
else
getAddressList().getMemoryRecordByDescription("No Fire animation (buggy)").Active = false
end
end

function UDF1_CECheckbox9Change(sender)
if Shadow_CECheckbox9.Checked then
getAddressList().getMemoryRecordByDescription("No Hurtcam").Active = true
else
getAddressList().getMemoryRecordByDescription("No Hurtcam").Active = false
end
end

function UDF1_CECheckbox10Change(sender)
if Shadow_CECheckbox10.Checked then
getAddressList().getMemoryRecordByDescription("Hunger (Offline)").Active = true
else
getAddressList().getMemoryRecordByDescription("Hunger (Offline)").Active = false
end
end

function UDF1_CECheckbox11Change(sender)
if Shadow_CECheckbox11.Checked then
getAddressList().getMemoryRecordByDescription("Offline godmode").Active = true
else
getAddressList().getMemoryRecordByDescription("Offline godmode").Active = false
end
end


</LuaScript>
</CheatTable>
